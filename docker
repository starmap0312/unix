# Push an image or a repository to a Docker Registry
  sudo docker push [ip]:[port]/[repo_name]

# Pull an image or a repository from a Docker Registry
  sudo docker pull [ip]:[port]/[repo_name]
  ex. docker pull xxx.yahoo.com:4443/xxx/yyy:latest

# Restart a running container
  docker restart 

# List containers
  docker ps

# Attach to a running container
  docker attach [container_name]

# detach from the container
  Ctrl-p + Ctrl-q

# list local docker images
  docker images

# docker run
  1) Docker runs processes in isolated containers 
  2) A container is a process which runs on a host (local/remote). 
     when execute docker run, the container process that runs is isolated in that 
     it has its own file system, its own networking, and its own isolated process 
     tree separate from the host.
  3) use the docker run command to define the containerâ€™s resources at runtime

  General form
    $ docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]
    (must specify an IMAGE to derive the container from)
    ([OPTIONS] override the image defaults)

  options:
    -t: allocate a pseudo-tty
    -i: keep stdin open even if not attached
      ex. sudo docker run -t -i ubuntu:14.04 /bin/bash
      (initiate a bash terminal, allowing interactive mode)
    -v: shared file system
    -p: publish a container's port (or a range of ports) to the host
      ex. docker run -p 80:80 ...
    --entrypoint: default command to execute at runtime
      ex. docker run --entrypoint='/bin/bash' ...
    --env VAR_NAME=value: set environment variable with value
    --login: register or login to a Docker Registry (i.e. Docker Hub)
      require user to use sudo or be root

  ex. docker run -it -v filepath -p 8080:8080 --entrypoint='/bin/bash' [REMOTE_IMAGE] --login

# docker run: run a command in a new container
1) docker run --rm: automatically remove the container when it exits
   this runs the container at console which is removed when stopped
   ex. docker run --rm -v `pwd`/logs:/opt/docker/logs
2) docker run -d, --detach: detached mode
   this runs the container in the background 
   ex. docker run -d -v `pwd`/logs:/opt/docker/logs

# docker exec: run a command in a running (existing) container
options:
  -i, --interactive: keep STDIN open even if not attached
  -t: --tty: allocate a pseudo-TTY
  ex. sudo docker exec -i -t 665b4a1e17b6 /bin/bash
