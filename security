# disable ping replies
  to avoid network flooding or network congestion
  1) echo "1" > /proc/sys/net/ipv4/icmp_echo_ignore_all        ==> temporarily disable all replies
     echo "1" > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts ==> temporarily disable only ping
                                                                   broadcast replies
  2) edit /etc/sysctl.conf: net.ipv4.icmp_echo_ignore_all=1    ==> permanently disable replies

# disable SELinux (Security-Enhanced Linux)
  1) echo "0" > /selinux/enforce ==> disable temporarily
  2) edit /etc/selinux/config: SELINUX=disabled ==> disable permanently

# setup squid to control internet access
  squid is a proxy caching server used to control network access at your work environment
  1) restrict access to specific websites
     ex. www.google.com/www.facebook.com
  2) restrict access to particular network
     ex. 192.168.1.0/24
  3) use regular expression to allow or deny websites

# snort
  a free lightweight network intrusion detection system for both Unix/Windows systems

# PAM: Pluggable Authentication Modules for Linux
  /etc/security/pamkeys/
  1) Linux-PAM is a system of libraries that handle the authentication tasks of applications
     (services) on the system
  2) the library provides a stable general interface (Application Programming Interface - API) 
     that privilege granting programs (such as login(1) and su(1)) defer to to perform standard authentication
       tasks.
  3) PAM agent allows a user to use key-based authentication for executing sudo
     cat /etc/pam.d/sudo:
       auth sufficient pam_ssh_agent_auth.so file=/etc/security/pamkeys/%u
       i.e. the PAM agent will use the public keys in /etc/security/pamkeys/<username> for authentication

# kinit: obtain and cache Kerberos ticket-granting ticket
  options:
    -k [-t keytab_file]: requests a ticket, obtained from a key in the local hostâ€™s keytab file
  ex.
    kinit -k -t path/to/filename.keytab <username>@<host>

# SSO: Single Sign-On
  1) SSO (Single Sign-On) is a property of access control of multiple related, but independent software systems
  2) a user logs in with a single ID and password to gain access to a connected system or systems without using
     different usernames or passwords
  3) implementation: achieved over IP networks using "cookies" but only if the sites share a "common DNS parent domain"

# TLS: Transport Layer Security
  1) SSL (Secure Sockets Layer) is TLS's predecessor (TLS is the next generation protocol after SSL)
  2) it is a cryptographic protocol that provide communications security over a computer network
  3) it provides privacy and data integrity between two communicating computer applications
     it supports many different methods for exchanging keys, encrypting data, and authenticating message integrity
  4) it is used in applications: ex. web browsing, email, Internet faxing, instant messaging, and voice-over-IP (VoIP)
     websites use TLS to secure all communications between their servers and web browsers

# RBAC: role-based access control
  1) an approach to restricting system access to authorized users
  2) a policy neutral access control mechanism defined around roles and privileges
  3) within an organization, roles are created for various job functions
     the permissions to perform certain operations are assigned to specific roles
  4) users are not assigned permissions directly, but only acquire them through their role (or roles), so
     management of individual user rights becomes a matter of simply assigning appropriate roles to the user's account
  5) three primary rules
     i) role assignment
        a subject (person) can exercise a permission only if the subject (person) has selected or been assigned a role
    ii) role authorization
        a subject's (person) active role must be authorized for the subject
        with rule 1 above, this rule ensures that users can take on only roles for which they are authorized
   iii) permission authorization
        a subject (person) can exercise a permission only if the permission is authorized for the subject's active role
        with rules 1 and 2, this rule ensures that users can exercise only permissions for which they are authorized
   Subject (S): a person or automated agent (ex. a server)
   Role (R): Job function or title which defines an authority level
   Permissions (P): An approval of a mode of access to a resource

# Authentication vs. Authorization
  1) Authentication: the process of verifying who you are
  2) Authorization : the process of verifying that you have access to a resource

# Token based vs.Certificate based authentication 
  0) Cookie:
     when authenticated, the client gets a response with header: set-cookie
     every time the client requests, the client uses the cookies by putting the cookie in its request header: set-cookie
  1) Tokens: a symmetric key, i.e. the same key has to be both on the client and the server to be able to authenticate users
     when authenticated, the client gets a token
     every time the client requests, the client uses the token by putting the token in its request header: Authentication
     (cookie vs. token)
     stateless: token contains some extra information, so the servers needs not to maintain the session in a shared memory (easier to scale up to multiple servers)
     domain:    cookie is restricted to a specific domain, whereas token has no such limitation
  2) Certificates: an asymmetric set of keys, i.e. certificates are based on public-key cryptography and the client has the private key that is never shared by anyone else
     the public key is sent to the Certificate Authority (CA) to be signed and stamped into a certificate
     the client then get the certificate (signed public key) from server and verifies it with CA, and then uses it to encrypt its message 
     as only the server has the private key (the one never shared) and the client also verifies with CA that the server is trusted, so the message is safe to send to the server

# X.509 Certificate
  1) a digital certificate that uses the widely accepted international X.509 public key infrastructure (PKI) standard
  2) it is used to verify that a public key contained within the certificate belongs to some trusted entity (ex. user, computer or service identity)

