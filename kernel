# where are the kernel modules located?
  /lib/modules/<kernel-version>: all kernel modules or compiled drivers
  use command lsmod to view all installed kernel modules

# how to change kernel parameters?
  edit: /etc/sysctl.conf
  sysctl -p (make the changes permanently without rebooting)

# file handle limits
  limits on the number of open files
  kernel has built-in limits on the number of files that a process can open
    1) current limit: cat /proc/sys/fs/file-max
    2) raise the limit at run-time: sysctl -w fs.file-max=100000 (need root privilege)
    3) make the change permanantly
       edit /etc/sysctl.conf ==> fs.file-max = 100000
       sysctl -p             ==> let the change take effect

# socket tuning
   set up the numbers of concurent sessions of a server
   ex. with a large number of clients comnunicating with your server,
       the server may have a 20,000 open sockets or more
       one can increase that range by editing /etc/sysctl.conf
  1) the maximum number of "backlogged sockets"
     edit /etc/sysctl.conf
     net.core.somaxconn = 1024 (default: 128)
     (trade-off: slow connections)
     sysctl -p                ==> let the change take effect

# segfault: dmesg (kernel log message)
  ex.
    MyProcess[9755]: segfault at 7f1fd68fab50 ip 00007f1fcf3a4285 \
                     sp 00007fff3001bbc0 error 4 in libc-2.12.so[7f1fcf32e000+18b000]
    9755: PID
    ip: instruction pointer
    sp: stack pointer
    error code: architecture-specific flags (see arch/*/mm/fault.c for your platform)
      error 0: kernel-mode read resulting in no page being found
      error 1: kernel-mode read resulting in a protection fault
      error 2: kernel-mode write resulting in no page being found
      error 3: kernel-mode write resulting in a protection fault
      error 4: user-mode read resulting in no page being found
      error 5: user-mode read resulting in a protection fault
      error 6: user-mode write resulting in no page being found
      error 7: user-mode write resulting in a protection fault

# /var/log/mcelog
  mcelog logs and accounts machine checks (in particular memory, IO, and CPU hardware errors)

  ex. memory scrubbing

    STATUS cc000201000800c1 MCGSTATUS 0
    MCGCAP 1000814 APICID 29 SOCKETID 1 
    CPUID Vendor Intel Family 6 Model 45
    Hardware event. This is not a software error.
    MCE 1
    CPU 31 BANK 9 
    MISC 90001000100028c ADDR 83ffe9000 
    TIME 1470434232 Fri Aug  5 21:57:12 2016
    MCG status:
    MCi status:
    Error overflow
    Corrected error
    MCi_MISC register valid
    MCi_ADDR register valid
    MCA: MEMORY CONTROLLER MS_CHANNEL1_ERR
    Transaction: Memory scrubbing error
    MemCtrl: Corrected patrol scrub error

  memory scrubbing:
    1) reading from each computer memory location, correcting bit errors (if any) with an error-correcting
       code (ECC), and writing the corrected data back to the same location
    2) the information in an ECC memory is stored redundantly enough to correct single bit error per memory
       word. hence, an ECC memory can support the scrubbing of the memory content

