# CSS: Cascading Style Sheets

# Selectors: patterns used to select the element(s) you want to style
  1) class selector

    .class           .class_name        ==> selects all elements with class="class_name"

    (use class selector for repeated styling,  ex. a special form of header for error messages)

    h1.error {

    }

    <h1 class="error"> error title </h1>


  2) id selector

    #id              #attribute_name    ==> selects the element with attribute id="attribute_name"

    (use id selector for styling appearng once, ex. high level layout divs such sidebars, banner areas etc.)

# .class Selector
  ex. select and style all elements with class="intro":
  <html>
  <head>
  <style>
    h1.error {
        background-color: red;
    }
    .intro {                       # select class="intro"
        background-color: yellow;
    }
    #foo {                         # select id="foo"
        background-color: blue;
    }
  </style>
  </head>
  <body>
  <h1 class="error">
      Error Title
  </h1>
  <div class="intro">
      <p>My name is Donald.</p>
  </div>
  <div id="foo">
      <p>My name is Donald.</p>
  </div>
  </body>
  </html>

# ::before Selector
  ex. insert some text before the content of each <p> element
  p::before { 
    content: "Read this: ";
  }

# Java class selector: org.jsoup.select
  CSS-like element selector, that finds elements matching a query
  Selector syntax: a selector is a chain of simple selectors, separated by combinators (case insensitive)
    universal selector (*) is implicit when no element selector is supplied
      ex. *.header and .header is equivalent

    Pattern                  Matches
    -------                  -------
    *                        any element
    .class                   elements with a class name of "class"
    #id                      elements with attribute ID of "id"
    [attr]                   elements with an attribute named "attr" (with any value)
    [^attrPrefix]            elements with an attribute name starting with "attrPrefix". Use to find elements with HTML5 datasets
    [attr=val]               elements with an attribute named "attr", and value equal to "val"
    [attr="val"]             elements with an attribute named "attr", and value equal to "val"
    [attr*=valContaining]    elements with an attribute named "attr", and value containing "valContaining"
    [attr~=regex]            elements with an attribute named "attr", and value matching the regular expression
    (The above may be combined in any order)

    Combinators
    E F                      an F element descended from an E element
    E > F                    an F direct child of E

    Pseudo selectors
    :not(selector)           elements that do not match the selector
    :has(selector)           elements that contains at least one element matching the selector
