# Chef resource
  1) one part of the system, ex. a file, a template, or a package
  2) a part of the system and its desired state, ex. a package that should be installed, a service that
     should be running, or a file that should be generated
  3) every resource in Chef has a default action
     file resource has a default action ":create"  (create a file)
     ex.

     file 'motd' do
       content 'hello world'
     end


     file 'motd' do
       action :create
       content 'hello world'
     end

     other actions: install a package, and start a service
  4) resource attributes: can be ordered arbitrary
     ex.
       file '/etc/motd' do
         owner 'root'          <== resource attribute can be put in front of action
         group 'root'
         mode '0755'
         action :create
       end

# Chef recipe: recipes organize resources
  1) a file that groups related resources, ex. everything needed to configure a web server, database server, or
     a load balancer
  2) a collection of resources that describes a particular configuration or policy
     i.e. it describes everything that is required to configure part of a system
          install and configure software components
          manage files
          deploy applications
     ex.
       package 'httpd'                <== default action for package resource is install

       service 'httpd' do             <== specify the action for service resource to be enable, start
         action [:enable, :start]         i.e. enables the service when the system boots, then starts it
       end

       file '/var/www/html/index.html' do  <== create a file resource of webpage
         content '<html>
         <body>
             <h1>hello world</h1>
         </body>
       </html>'
       end

  2) command to run a single recipe (local mode)
     ex.
       chef-client --local-mode filename.rb
       
  3) Chef applies resources in the order they appea

# Chef cookbook: make your recipe more manageable
  1) provides structure to your recipes and enables you to more easily reference external files
     i.e. a cookbook helps you stay organized.
  2) command to create a cookbook
     chef generate cookbook /path/to/cookbooks/<cookbook_name>
     ex.
       chef generate cookbook cookbooks/learn_chef_httpd
  3) command to run a cookbook (local mode)
     sudo chef-client --local-mode --runlist 'recipe[<cookbook_name>]'
       run-list specifies each of the individual recipes from your cookbook that you want to apply
       run-list can contain multiple recipes from multiple cookbooks
     ex. 
       sudo chef-client --local-mode --runlist 'recipe[learn_chef_httpd]'
       (recipe[learn_chef_httpd] == recipe[learn_chef_httpd::default])

# create a template
  chef generate template cookbooks/<cookbook_name> <filename>
  ex.
    chef generate template cookbooks/learn_chef_httpd index.html

# differences between recipe and cookbook
  recipe: a collection of resources, and typically configures a software package or a piece of infrastructure
  cookbook: groups together recipes in a way that is more manageable than having just recipes alone
  ex.
    a recipe starts the configuration policy of a web site
    a template resource for the HTML home page from a external file
    a cookbook to package both parts up into a single unit for later deployment

# run-list: let you specify which recipes to run, and the order in which to run them
  run-list is important when there are multiple cookbooks (the order in which they run)
  
